# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url:   /
  param: { module: member, action: home }

member_index:
  url:   /member
  param: { module: member, action: home }

member_invite:
  url:   /invite
  param: { module: member, action: invite }

login:
  url: /member/login/*
  param: { module: member, action: login }

member_logout:
  url: /logout
  param: { module: member, action: logout }


friend_list:
  url: /friend/list
  param: { module: friend, action: list }

friend_showActivity:
  url: /friend/showActivity
  param: { module: friend, action: showActivity }

error:
  url: /default/error
  param: { module: default, action: error }


member_profile:
  url:   /member/:id
  class:   opDynamicAclRoute
  options: { model: Member, type: object, privilege: view }
  param:   { module: member, action: profile }
  requirements:
    id:        \d+
    sf_method: [get]

member_profile_mine:
  url:   /member/profile
  param:   { module: member, action: profile }


########
#diary:
#  class: opDiaryPluginFrontendRouteCollection
#  options: { name: diary }

diary_index:
  url: /diary
  param: { module: diary, action: index }

diary_search:
  url: /diary/search
  param: { module: diary, action: search }
# + extra_parameters_as_query_string: true

diary_list:
  url: /diary/list
  param: { module: diary, action: list }
# + extra_parameters_as_query_string: true

# diary_list_member_....

diary_list_member:
  url: /diary/listMember/:id
  class: sfDoctrineRoute
  param: { module: diary, action: listMember }
  options: { model: Member, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [get]
# + extra_parameters_as_query_string: true

diary_list_mine:
  url: /diary/listMember
  param: { module: diary, action: listMember }
# + extra_parameters_as_query_string: true

diary_list_friend:
  url: /diary/listFriend
  param: { module: diary, action: listFriend }
# + extra_parameters_as_query_string: true

diary_show:
  url: /diary/:id
  class: sfDoctrineRoute
  param: { module: diary, action: show }
  options: { model: Diary, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [get]

diary_comment_create:
  url: /diary/:id/comment/create
  class: sfDoctrineRoute
  param: { module: diaryComment, action: create }
  options: { model: Diary, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [post]

diary_new:
  url: /diary/new
  param: { module: diary, action: new }

diary_create:
  url: /diary/create
  param: { module: diary, action: create }

confirmation_list:
  url:   /confirmation
  param: { module: confirmation, action: list }


###
community_home:
  url: /community/:id
  class: sfDoctrineRoute
  param: { module: community, action: home }
  options: { model: Community, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [get]

communityTopic_show:
  url: /communityTopic/:id
  class: sfDoctrineRoute
  param: { module: communityTopic, action: show }
  options: { model: CommunityTopic, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [get]

communityTopic_comment_create:
  url: /communityTopic/:id/comment/create
  class: sfDoctrineRoute
  param: { module: communityTopicComment, action: create }
  options: { model: CommunityTopic, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [post]

communityEvent_show:
  url: /communityEvent/:id
  class: sfDoctrineRoute
  param: { module: communityEvent, action: show }
  options: { model: CommunityEvent, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [get]

communityEvent_comment_create:
  url: /communityEvent/:id/comment/create
  class: sfDoctrineRoute
  param: { module: communityEventComment, action: create }
  options: { model: CommunityEvent, type: object, privilege: view }
  requirements:
    id:        \d+
    sf_method: [post]

about:
  url:   /about
  param: { module: about, action: index }

# generic rules
# please, remove them by adding more specific rules
#default_index:
#  url:   /:module
#  param: { action: index }
#
default:
  url:   /:module/:action/*

